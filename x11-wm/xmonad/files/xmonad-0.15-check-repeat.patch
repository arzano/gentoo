diff --git a/src/XMonad/Core.hs b/src/XMonad/Core.hs
index 7810522..ad095c3 100644
--- a/src/XMonad/Core.hs
+++ b/src/XMonad/Core.hs
@@ -71,6 +71,7 @@ data XState = XState
     , waitingUnmap     :: !(M.Map Window Int)            -- ^ the number of expected UnmapEvents
     , dragging         :: !(Maybe (Position -> Position -> X (), X ()))
     , numberlockMask   :: !KeyMask                       -- ^ The numlock modifier
+    , keyPressed       :: !KeyCode                       -- ^ keycode of the key being pressed if any
     , extensibleState  :: !(M.Map String (Either String StateExtension))
     -- ^ stores custom state information.
     --
diff --git a/src/XMonad/Main.hs b/src/XMonad/Main.hs
index f17ac8d..b34658f 100644
--- a/src/XMonad/Main.hs
+++ b/src/XMonad/Main.hs
@@ -224,6 +224,7 @@ launch initxmc = do
             , mapped          = S.empty
             , waitingUnmap    = M.empty
             , dragging        = Nothing
+            , keyPressed      = 0
             , extensibleState = M.empty
             }
 
@@ -296,10 +297,15 @@ handle :: Event -> X ()
 -- run window manager command
 handle (KeyEvent {ev_event_type = t, ev_state = m, ev_keycode = code})
     | t == keyPress = withDisplay $ \dpy -> do
-        s  <- io $ keycodeToKeysym dpy code 0
-        mClean <- cleanMask m
-        ks <- asks keyActions
-        userCodeDef () $ whenJust (M.lookup (mClean, s) ks) id
+    	kp <- gets keyPressed
+        if kp /= code then do
+                modify $ \s -> s { keyPressed = code }
+                s  <- io $ keycodeToKeysym dpy code 0
+                mClean <- cleanMask m
+                ks <- asks keyActions
+                userCodeDef () $ whenJust (M.lookup (mClean, s) ks) id
+            else return ()
+    | t == keyRelease = modify $ \s -> s { keyPressed = 0 }
 
 -- manage a new window
 handle (MapRequestEvent    {ev_window = w}) = withDisplay $ \dpy -> do
diff --git a/src/XMonad/Operations.hs b/src/XMonad/Operations.hs
index 2845a6e..97ebc1f 100644
--- a/src/XMonad/Operations.hs
+++ b/src/XMonad/Operations.hs
@@ -510,6 +510,7 @@ readStateFile xmc = do
                     , mapped          = S.empty
                     , waitingUnmap    = M.empty
                     , dragging        = Nothing
+                    , keyPressed      = 0
                     , extensibleState = extState
                     }
   where
